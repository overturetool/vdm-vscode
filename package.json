{
    "name": "vdm-vscode",
    "version": "1.3.3",
    "publisher": "overturetool",
    "engines": {
        "vscode": "^1.64.0"
    },
    "displayName": "VDM VSCode",
    "description": "Support for the VDM modelling languages: VDM-SL, VDM++ and VDM-RT",
    "contributors": [
        "Jonas K. Rask",
        "Frederik P. Madsen",
        "Nick Battle",
        "Hugo D. Macedo",
        "Tom Montout",
        "Futa Hirakoba"
    ],
    "license": "GPL-3.0-or-later",
    "categories": [
        "Programming Languages",
        "Debuggers",
        "Linters",
        "Snippets"
    ],
    "keywords": [
        "Vienna Development Method",
        "vdm",
        "VDM",
        "vdmsl",
        "VDM-SL",
        "vdmpp",
        "VDM++",
        "vdmrt",
        "VDM-RT",
        "multi-root ready"
    ],
    "main": "./out/src/extension",
    "browser": "./out/src/webExtension.js",
    "icon": "resources/icons/Overture.png",
    "homepage": "https://github.com/jonaskrask/vdm-vscode/blob/master/README.md",
    "repository": {
        "type": "git",
        "url": "https://github.com/jonaskrask/vdm-vscode"
    },
    "bugs": {
        "type": "git",
        "url": "https://github.com/jonaskrask/vdm-vscode/issues"
    },
    "activationEvents": [
        "onDebugResolve:vdm",
        "onLanguage:vdmsl",
        "onLanguage:vdmpp",
        "onLanguage:vdmrt",
        "workspaceContains:*.vdmsl",
        "workspaceContains:*.vdmpp",
        "workspaceContains:*.vdmrt",
        "onCommand:vdm-vscode.importExample",
        "onCommand:vdm-vscode.addFoldersToClassPath",
        "onCommand:vdm-vscode.addFilesToClassPath",
        "onCommand:vdm-vscode.openServerLog",
        "onCommand:vdm-vscode.openServerLogFolder"
    ],
    "contributes": {
        "configurationDefaults": {
            "editor.tokenColorCustomizations": {
                "textMateRules": [
                    {
                        "scope": "meta.embedded.inline.latex",
                        "settings": {
                            "fontStyle": "italic",
                            "foreground": "#7c7c7c"
                        }
                    }
                ]
            }
        },
        "languages": [
            {
                "id": "vdmsl",
                "aliases": [
                    "VDM-SL",
                    "vdmsl"
                ],
                "extensions": [
                    ".vdmsl"
                ],
                "configuration": "./syntaxes/language-configuration.json"
            },
            {
                "id": "vdmpp",
                "aliases": [
                    "VDM++",
                    "VDM-PP",
                    "vdmpp"
                ],
                "extensions": [
                    ".vdmpp"
                ],
                "configuration": "./syntaxes/language-configuration.json"
            },
            {
                "id": "vdmrt",
                "aliases": [
                    "VDM-RT",
                    "vdmrt"
                ],
                "extensions": [
                    ".vdmrt"
                ],
                "configuration": "./syntaxes/language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "vdmsl",
                "scopeName": "source.vdmsl",
                "path": "./syntaxes/vdmsl.tmLanguage.json",
                "embeddedLanguages": {
                    "meta.embedded.inline.latex": "latex"
                }
            },
            {
                "language": "vdmpp",
                "scopeName": "source.vdmpp",
                "path": "./syntaxes/vdmpp.tmLanguage.json",
                "embeddedLanguages": {
                    "meta.embedded.inline.latex": "latex"
                }
            },
            {
                "language": "vdmrt",
                "scopeName": "source.vdmrt",
                "path": "./syntaxes/vdmrt.tmLanguage.json",
                "embeddedLanguages": {
                    "meta.embedded.inline.latex": "latex"
                }
            },
            {
                "scopeName": "source.vdm",
                "path": "./syntaxes/vdm.tmLanguage.json"
            },
            {
                "scopeName": "source.vdm.type",
                "path": "./syntaxes/vdm.type.tmLanguage.json"
            },
            {
                "scopeName": "source.vdm.number",
                "path": "./syntaxes/vdm.number.tmLanguage.json"
            },
            {
                "scopeName": "source.vdm.operators",
                "path": "./syntaxes/vdm.operators.tmLanguage.json"
            },
            {
                "scopeName": "source.vdm.statements",
                "path": "./syntaxes/vdm.statements.tmLanguage.json"
            }
        ],
        "snippets": [
            {
                "language": "vdmsl",
                "path": "./resources/snippets/vdmslSnippets.json"
            },
            {
                "language": "vdmpp",
                "path": "./resources/snippets/vdmppSnippets.json"
            },
            {
                "language": "vdmrt",
                "path": "./resources/snippets/vdmrtSnippets.json"
            }
        ],
        "commands": [
            {
                "command": "vdm-vscode.changeVdmjProperties",
                "title": "Change Project Wide VDMJ Properties",
                "category": "VDM"
            },
            {
                "command": "vdm-vscode.OpenVDMTools",
                "title": "Open Project in VDMTools",
                "category": "VDM"
            },
            {
                "command": "vdm-vscode.restartActiveClient",
                "title": "Restart Client (of the active text document)",
                "category": "VDM"
            },
            {
                "command": "vdm-vscode.addFoldersToClassPath",
                "title": "Add folders to Class Path",
                "category": "VDM"
            },
            {
                "command": "vdm-vscode.addFilesToClassPath",
                "title": "Add files to Class Path",
                "category": "VDM"
            },
            {
                "command": "vdm-vscode.addLibraryJarFolders",
                "title": "Add folder(s) containing library jars",
                "category": "VDM"
            },
            {
                "command": "vdm-vscode.addLibraryJars",
                "title": "Add library jar",
                "category": "VDM"
            },
            {
                "command": "vdm-vscode.addRunConfiguration",
                "title": "Add VDM Run Configuration",
                "category": "VDM",
                "icon": "$(library)",
                "enablement": "vdm-vscode.addRunConfiguration"
            },
            {
                "command": "vdm-vscode.addLibrary",
                "title": "Add VDM Library",
                "category": "VDM",
                "icon": "$(library)",
                "enablement": "vdm-vscode.addLibrary"
            },
            {
                "command": "vdm-vscode.javaCodeGen",
                "title": "Generate Java Code",
                "category": "VDM",
                "icon": "$(codegen)",
                "enablement": "vdm-vscode.javaCodeGen"
            },
            {
                "command": "vdm-vscode.importExample",
                "title": "Import VDM Example",
                "category": "VDM",
                "icon": "$(example)"
            },
            {
                "command": "vdm-vscode.translate.latex",
                "title": "Translate to LaTeX",
                "category": "VDM",
                "icon": "$(references)"
            },
            {
                "command": "vdm-vscode.translate.word",
                "title": "Translate to Word",
                "category": "VDM",
                "icon": "$(references)"
            },
            {
                "command": "vdm-vscode.translate.coverage",
                "title": "Generate Coverage",
                "category": "VDM",
                "icon": "$(references)"
            },
            {
                "command": "vdm-vscode.translate.graphviz",
                "title": "Generate Dependency Graph",
                "category": "VDM",
                "icon": "$(references)"
            },
            {
                "command": "vdm-vscode.translate.isabelle",
                "title": "Translate to Isabelle",
                "category": "VDM",
                "icon": "$(references)",
                "enablement": "vdm-vscode.translate.isabelle"
            },
            {
                "command": "vdm-vscode.coverage.show",
                "title": "Enable Coverage Overlay",
                "category": "VDM",
                "icon": {
                    "light": "/resources/icons/light/coverage_overlay_light.svg",
                    "dark": "/resources/icons/dark/coverage_overlay_dark.svg"
                }
            },
            {
                "command": "vdm-vscode.coverage.hide",
                "title": "Disable Coverage Overlay",
                "category": "VDM",
                "icon": {
                    "light": "/resources/icons/coverage_overlay_enabled.svg",
                    "dark": "/resources/icons/coverage_overlay_enabled.svg"
                }
            },
            {
                "command": "vdm-vscode.pog.run",
                "title": "Run Proof Obligation Generation",
                "category": "VDM",
                "icon": "$(run)"
            },
            {
                "command": "vdm-vscode.openServerLog",
                "title": "Open Server Log",
                "category": "VDM"
            },
            {
                "command": "vdm-vscode.openServerLogFolder",
                "title": "Open Server Log Folder",
                "category": "VDM"
            },
            {
                "command": "vdm-vscode.ct.goToTrace",
                "title": "Go to trace",
                "category": "VDM",
                "icon": "$(go-to-file)"
            },
            {
                "command": "vdm-vscode.ct.setExecuteFilter",
                "title": "Set Execute Filter Options",
                "category": "VDM",
                "icon": "$(gear)"
            },
            {
                "command": "vdm-vscode.ct.rebuildOutline",
                "title": "Rebuild Trace Outline",
                "category": "VDM",
                "icon": "$(refresh)",
                "enablement": "vdm-vscode.ct.idle-state"
            },
            {
                "command": "vdm-vscode.ct.fullExecute",
                "title": "Execute All Tests",
                "category": "VDM",
                "icon": "$(run-all)",
                "enablement": "vdm-vscode.ct.idle-state"
            },
            {
                "command": "vdm-vscode.ct.execute",
                "title": "Full Evaluation",
                "category": "VDM",
                "icon": "$(run)",
                "enablement": "vdm-vscode.ct.idle-state"
            },
            {
                "command": "vdm-vscode.ct.filteredExecute",
                "title": "Filtered Evaluation",
                "category": "VDM",
                "icon": {
                    "light": "/resources/icons/light/runFiltered.svg",
                    "dark": "/resources/icons/dark/runFiltered.svg"
                },
                "enablement": "vdm-vscode.ct.idle-state"
            },
            {
                "command": "vdm-vscode.ct.generate",
                "title": "Generate Tests",
                "category": "VDM",
                "icon": "$(refresh)",
                "enablement": "vdm-vscode.ct.idle-state"
            },
            {
                "command": "vdm-vscode.ct.enableVerdictFilter",
                "title": "Filter test results",
                "category": "VDM",
                "icon": "$(filter)"
            },
            {
                "command": "vdm-vscode.ct.disableVerdictFilter",
                "title": "Disable filtering of tests",
                "category": "VDM",
                "icon": {
                    "light": "/resources/icons/light/disableFilter.svg",
                    "dark": "/resources/icons/dark/disableFilter.svg"
                }
            },
            {
                "command": "vdm-vscode.ct.sendToInterpreter",
                "title": "Send test to interpreter",
                "category": "VDM",
                "icon": "$(debug-alt)",
                "enablement": "vdm-vscode.ct.idle-state"
            },
            {
                "command": "vdm-vscode.ct.cancel",
                "title": "Cancel Combinatorial Test Request",
                "category": "VDM",
                "icon": "$(debug-stop)"
            },
            {
                "command": "vdm-vscode.ct.selectWorkspaceFolder",
                "title": "Change active workspace folder",
                "category": "VDM",
                "icon": "$(root-folder)",
                "enablement": "vdm-vscode.ct.idle-state"
            },
            {
                "command": "vdm-vscode.ct.clearView",
                "title": "Clear Combinatorial Testing View",
                "category": "VDM",
                "icon": "$(clear-all)",
                "enablement": "vdm-vscode.ct.idle-state"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "combinatorialTesting",
                    "title": "Combinatorial Testing",
                    "icon": "resources/icons/ctView.svg",
                    "when": "vdm-vscode.ct.show == true"
                }
            ]
        },
        "views": {
            "combinatorialTesting": [
                {
                    "id": "vdm-vscode.ct.testView",
                    "name": "Tests",
                    "when": "vdm-vscode.ct.show == true"
                },
                {
                    "id": "vdm-vscode.ct.resultView",
                    "name": "Test Sequence Results",
                    "when": "vdm-vscode.ct.show == true"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "explorer",
                "contents": "You can also import a VDM example by clicking the button below.\n[Import VDM example](command:vdm-vscode.importExample)",
                "when": "workspaceFolderCount == 0"
            },
            {
                "view": "vdm-vscode.ct.testView",
                "contents": "[Generate test outline](command:vdm-vscode.ct.selectWorkspaceFolder)"
            }
        ],
        "submenus": [
            {
                "id": "vdm-vscode.vdmsubmenu",
                "label": "VDM"
            }
        ],
        "menus": {
            "vdm-vscode.vdmsubmenu": [
                {
                    "command": "vdm-vscode.pog.run",
                    "when": "vdm-vscode.pog.run == true",
                    "group": "verification@1"
                },
                {
                    "command": "vdm-vscode.translate.latex",
                    "group": "translate@1"
                },
                {
                    "command": "vdm-vscode.translate.word",
                    "group": "translate@2"
                },
                {
                    "command": "vdm-vscode.translate.isabelle",
                    "when": "explorerResourceIsFolder || resourceLangId == vdmsl",
                    "group": "translate@3"
                },
                {
                    "command": "vdm-vscode.translate.coverage",
                    "group": "generate@1"
                },
                {
                    "command": "vdm-vscode.javaCodeGen",
                    "group": "generate@2"
                },
                {
                    "command": "vdm-vscode.translate.graphviz",
                    "group": "generate@3"
                },
                {
                    "command": "vdm-vscode.addLibrary",
                    "group": "workspace@1"
                },
                {
                    "command": "vdm-vscode.addRunConfiguration",
                    "group": "workspace@2"
                }
            ],
            "view/title": [
                {
                    "command": "vdm-vscode.ct.fullExecute",
                    "when": "view =~ /vdm-vscode.ct.testView/ && vdm-vscode.ct.show-cancel-button == false",
                    "group": "navigation@0"
                },
                {
                    "command": "vdm-vscode.ct.cancel",
                    "when": "view =~ /vdm-vscode.ct.testView/ && vdm-vscode.ct.show-cancel-button == true",
                    "group": "navigation@1"
                },
                {
                    "command": "vdm-vscode.ct.setExecuteFilter",
                    "when": "view =~ /vdm-vscode.ct.testView/ && vdm-vscode.ct.show-execute-filter-button == true",
                    "group": "navigation@2"
                },
                {
                    "command": "vdm-vscode.ct.enableVerdictFilter",
                    "when": "view =~ /vdm-vscode.ct.testView/ && vdm-vscode.ct.show-verdict-filter-button == true",
                    "group": "navigation@3"
                },
                {
                    "command": "vdm-vscode.ct.disableVerdictFilter",
                    "when": "view =~ /vdm-vscode.ct.testView/ && vdm-vscode.ct.show-verdict-filter-button == false",
                    "group": "navigation@3"
                },
                {
                    "command": "vdm-vscode.ct.rebuildOutline",
                    "when": "view =~ /vdm-vscode.ct.testView/",
                    "group": "navigation@4"
                },
                {
                    "command": "vdm-vscode.ct.selectWorkspaceFolder",
                    "when": "view =~ /vdm-vscode.ct.testView/",
                    "group": "navigation@5"
                },
                {
                    "command": "vdm-vscode.ct.clearView",
                    "when": "view =~ /vdm-vscode.ct.testView/",
                    "group": "navigation@6"
                }
            ],
            "view/item/context": [
                {
                    "command": "vdm-vscode.ct.execute",
                    "when": "viewItem == trace || viewItem == testgroup",
                    "group": "vdm-vscode.ct.testView@0"
                },
                {
                    "command": "vdm-vscode.ct.filteredExecute",
                    "when": "viewItem == trace && vdm-vscode.ct.show-execute-filter-button",
                    "group": "vdm-vscode.ct.testView@1"
                },
                {
                    "command": "vdm-vscode.ct.generate",
                    "when": "viewItem == trace",
                    "group": "vdm-vscode.ct.testView@2"
                },
                {
                    "command": "vdm-vscode.ct.goToTrace",
                    "when": "viewItem == trace",
                    "group": "vdm-vscode.ct.testView@3"
                },
                {
                    "command": "vdm-vscode.ct.sendToInterpreter",
                    "when": "viewItem == test && vdm-vscode.ct.show-interpret-button",
                    "group": "vdm-vscode.ct.testView@0"
                },
                {
                    "command": "vdm-vscode.ct.execute",
                    "when": "viewItem == trace || viewItem == testgroup",
                    "group": "inline@0"
                },
                {
                    "command": "vdm-vscode.ct.filteredExecute",
                    "when": "viewItem == trace && vdm-vscode.ct.show-execute-filter-button",
                    "group": "inline@1"
                },
                {
                    "command": "vdm-vscode.ct.generate",
                    "when": "viewItem == trace",
                    "group": "inline@2"
                },
                {
                    "command": "vdm-vscode.ct.goToTrace",
                    "when": "viewItem == trace",
                    "group": "inline@3"
                },
                {
                    "command": "vdm-vscode.ct.sendToInterpreter",
                    "when": "viewItem == test && vdm-vscode.ct.show-interpret-button",
                    "group": "inline@0"
                }
            ],
            "explorer/context": [
                {
                    "command": "vdm-vscode.importExample",
                    "group": "vdm@0"
                },
                {
                    "submenu": "vdm-vscode.vdmsubmenu",
                    "when": "explorerResourceIsFolder && vdm-submenus-show == true || resourceLangId == vdmsl && vdm-submenus-show == true || resourceLangId == vdmpp && vdm-submenus-show == true || resourceLangId == vdmrt && vdm-submenus-show == true",
                    "group": "vdm@1"
                }
            ],
            "editor/title": [
                {
                    "command": "vdm-vscode.coverage.show",
                    "when": "vdm-vscode.translate.coverage == true && vdm-vscode.coverage.show",
                    "group": "navigation"
                },
                {
                    "command": "vdm-vscode.coverage.hide",
                    "when": "vdm-vscode.translate.coverage == true && vdm-vscode.coverage.show == false",
                    "group": "navigation"
                }
            ],
            "editor/context": [
                {
                    "submenu": "vdm-vscode.vdmsubmenu",
                    "when": "resourceLangId == vdmsl && vdm-submenus-show == true || resourceLangId == vdmpp && vdm-submenus-show == true || resourceLangId == vdmrt && vdm-submenus-show == true",
                    "group": "vdm@1"
                }
            ],
            "commandPalette": [
                {
                    "command": "vdm-vscode.changeVdmjProperties",
                    "when": "vdm-vscode.changeVdmjProperties"
                },
                {
                    "command": "vdm-vscode.OpenVDMTools",
                    "when": "vdm-vscode.OpenVDMTools"
                },
                {
                    "command": "vdm-vscode.coverage.show",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.coverage.hide",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.pog.run",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.ct.setExecuteFilter",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.ct.rebuildOutline",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.ct.fullExecute",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.ct.execute",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.ct.filteredExecute",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.ct.generate",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.ct.enableVerdictFilter",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.ct.disableVerdictFilter",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.ct.sendToInterpreter",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.ct.goToTrace",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.translate.latex",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.translate.word",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.translate.coverage",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.translate.graphviz",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.translate.isabelle",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.addLibrary",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.addRunConfiguration",
                    "when": "false"
                },
                {
                    "command": "vdm-vscode.javaCodeGen",
                    "when": "false"
                }
            ]
        },
        "configuration": {
            "title": "VDM VSCode",
            "properties": {
                "vdm-vscode.server.development.experimentalServer": {
                    "type": "boolean",
                    "default": false,
                    "scope": "resource",
                    "description": "Use experimental server. True if client should not launch server, but connect to a server on socket connections."
                },
                "vdm-vscode.server.development.lspPort": {
                    "title": "LSP Port",
                    "type": "integer",
                    "default": 8000,
                    "scope": "resource",
                    "markdownDescription": "Port used for LSP. NOTE: Only used when `#vdm-vscode.server.development.experimentalServer#` is active."
                },
                "vdm-vscode.server.logLevel": {
                    "type": "string",
                    "enum": [
                        "off",
                        "severe",
                        "warning",
                        "info",
                        "config",
                        "fine",
                        "finer",
                        "finest",
                        "all"
                    ],
                    "default": "off",
                    "scope": "resource",
                    "markdownDescription": "Enables logging of the VDMJ server to a file [in this folder](command:vdm-vscode.openServerLogFolder). This log can be used to diagnose Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project."
                },
                "vdm-vscode.server.JVMArguments": {
                    "title": "JVM Arguments",
                    "type": "string",
                    "default": "",
                    "scope": "resource",
                    "description": "JVM arguments used when launching the server."
                },
                "vdm-vscode.server.classPathAdditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "scope": "resource",
                    "markdownDescription": "List of folder and/or file paths that should be included in the class path for the language server. [Find folders](command:vdm-vscode.addFoldersToClassPath), [Find files](command:vdm-vscode.addFilesToClassPath), or type in manually."
                },
                "vdm-vscode.server.libraries.VDM-Libraries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [],
                    "scope": "resource",
                    "markdownDescription": "A list containing library jar paths. Adding a folder path will load all library jars in the folder. If using a relative path it is expected to be defined at the 'folder' settings level as the path is expected to be relative to the corresponding project. [Find folders](command:vdm-vscode.addLibraryJarFolders), [Find files](command:vdm-vscode.addLibraryJars), or type in manually."
                },
                "vdm-vscode.server.libraries.includeDefaultLibraries": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Include the default libraries that are packaged with the extension."
                },
                "vdm-vscode.server.highPrecision": {
                    "type": "boolean",
                    "default": false,
                    "scope": "resource",
                    "description": "Use high precision variant of VDMJ."
                },
                "vdm-vscode.server.stdio.activateStdoutLogging": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Activate logging of stdout/stderr to terminal window. NOTE: This may cause performance slowdown if specifications have many annotations."
                },
                "vdm-vscode.server.stdio.stdioLogPath": {
                    "type": "string",
                    "default": "",
                    "scope": "resource",
                    "markdownDescription": "File path for directory that should be used to store stdout/stderr logs. NOTE: If empty, terminal logging is used instead of file logging. The setting is only used when `#vdm-vscode.server.stdio.activateStdoutLogging#` is active."
                },
                "vdm-vscode.server.strict": {
                    "type": "boolean",
                    "default": false,
                    "scope": "resource",
                    "description": "Activate the VDMJ -strict flag that highlights (with warnings) where a specification is taking advantage of lenient parsing rule."
                },
                "vdm-vscode.server.plugins": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the plugin"
                            },
                            "classname": {
                                "type": "string",
                                "description": "Fully qualified name of the main class"
                            },
                            "jar": {
                                "type": "string",
                                "description": "Path to the jar file containing the plugin"
                            },
                            "dialects": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "vdmsl",
                                        "vdmpp",
                                        "vdmrt"
                                    ]
                                },
                                "description": "Optional: Dialects that the plugin supports. If not included, it is assumed that the plugin is available for all VDM dialects"
                            }
                        }
                    },
                    "scope": "resource",
                    "description": "Plugins for the VDMJ language server."
                },
                "vdm-vscode.server.verbose": {
                    "type": "boolean",
                    "default": false,
                    "scope": "resource",
                    "description": "Activate the VDMJ -verbose flag that sends detailed information to the VDMJ console."
                },
                "vdm-vscode.coverage.OverlayLatestCoverage": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Enabled: The latest generated coverage is utilised for overlaying. Disabled: Choose which coverage should be used for overlaying."
                },
                "vdm-vscode.coverage.UseHeatmapColouring": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Enabled: The number of hits (larger than zero) corresponds to a brighter green. Disabled: All sections with any number (hits larger than zero) are colored the same green."
                },
                "vdm-vscode.javaCodeGen.disableCloning": {
                    "type": "boolean",
                    "default": false,
                    "scope": "resource",
                    "description": "Disable cloning (may lead to code being generated that does not preserve the semantics of the input specification)"
                },
                "vdm-vscode.javaCodeGen.sequencesAsStrings": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Generate character sequences as strings"
                },
                "vdm-vscode.javaCodeGen.concurrencyMechanisms": {
                    "type": "boolean",
                    "default": false,
                    "scope": "resource",
                    "description": "Generate concurrency mechanisms"
                },
                "vdm-vscode.javaCodeGen.vdmLocationInformation": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Generate VDM location information for code generated constructs"
                },
                "vdm-vscode.javaCodeGen.outputPackage": {
                    "type": "string",
                    "default": "",
                    "scope": "resource",
                    "description": "Choose output package e.g : my.code"
                },
                "vdm-vscode.javaCodeGen.skipClassesModules": {
                    "type": "string",
                    "default": "",
                    "scope": "resource",
                    "description": "Skip classes/modules during the code generation process. Separate by ';' e.g : World;Env"
                },
                "vdm-vscode.translate.latex.modelOnly": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Only model part will be included in the Latex translation, i.e., everything enclosed within '\\begin{vdm_al}' and '\\end{vdm_al}'"
                },
                "vdm-vscode.translate.latex.markCoverage": {
                    "type": "boolean",
                    "default": false,
                    "scope": "resource",
                    "description": "Mark coverage in the Latex translation"
                },
                "vdm-vscode.translate.latex.insertCoverageTables": {
                    "type": "boolean",
                    "default": false,
                    "scope": "resource",
                    "description": "Insert coverage tables in the Latex translation"
                },
                "vdm-vscode.translate.general.storeAllTranslations": {
                    "type": "boolean",
                    "default": false,
                    "scope": "resource",
                    "description": "Stores each translation in a timestamped folder instead of overwriting the previous content"
                },
                "vdm-vscode.translate.general.allowSingleFileTranslation": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "If enabled, translates only the selected file. If disabled, translate is always applied to the whole project"
                },
                "vdm-vscode.translate.isabelle.strict": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Strict handling of certain errors (e.g. print output or not, raise VDMJ warnings as translation errors, etc.)."
                },
                "vdm-vscode.translate.isabelle.maxErrors": {
                    "type": "number",
                    "default": 100,
                    "scope": "resource",
                    "description": "Maximum number (default=100) of translation errors to report. This is similar to VDMJ's maxErrors",
                    "minimum": 10,
                    "maximum": 10000
                },
                "vdm-vscode.translate.isabelle.reportVDMWarnings": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Report VDMJ warnings as part of the plugin output."
                },
                "vdm-vscode.translate.isabelle.linientPost": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Translate VDM source as an Isabelle comment alongside its translation."
                },
                "vdm-vscode.translate.isabelle.printVDMComments": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Prints VDM user comments as Isabelle comments when true, or ignore them when false."
                },
                "vdm-vscode.translate.isabelle.printIsaComments": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Prints Isabelle translation comments to the user (e.g., explanatory comments about translation's implicit VDM checks)."
                },
                "vdm-vscode.translate.isabelle.runExu": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Chooses whether to run the Exu VDM analyser prior to translation. Exu will provide information about VDM style and potential translation issues."
                },
                "vdm-vscode.translate.isabelle.valueAsAbbreviation": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Translate VDM values as Isabelle abbreviations when true, and as Isabelle definitions when false."
                },
                "vdm-vscode.translate.isabelle.translateTypeDefMinMax": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Translate VDM min_T or max_T when translating ordering predicates for type definitions."
                },
                "vdm-vscode.translate.isabelle.printVDMSource": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Translate VDM source as an Isabelle comment immediately before its translation."
                },
                "vdm-vscode.translate.isabelle.printLocations": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Translate VDM source location information as an Isabelle comment alongside its VDM source translation."
                },
                "vdm-vscode.translate.isabelle.runIsapog": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Translate VDM POs as a separate theory file associated with the recently translated VDM model."
                },
                "vdm-vscode.translate.isabelle.linientInvCheck": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Exu invariant type checks allow subtyping instead of explicit invariant/pre calls."
                },
                "vdm-vscode.translate.isabelle.proofStrategy": {
                    "type": "string",
                    "enum": [
                        "optimistic",
                        "hopeful",
                        "pessimistic",
                        "realistic",
                        "surrender"
                    ],
                    "default": "surrender",
                    "description": "Proof strategy choice for the `isapog` plugin. It determines what kind of proof script the plugin will generate for the translated PO.",
                    "scope": "resource"
                },
                "vdm-vscode.encoding.showWarning": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "markdownDescription": "If enabled, shows a warning if document encoding is not UTF-8"
                },
                "vdm-vscode.combinatorialTesting.groupSize": {
                    "type": "number",
                    "default": 300,
                    "scope": "application",
                    "description": "Determine the maximum group size for tests in the combinatorial testing view",
                    "minimum": 10,
                    "maximum": 1000
                },
                "vdm-vscode.codeLenses.enabled": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Enable/disable code lenses"
                },
                "vdm-vscode.trace.server": {
                    "type": "string",
                    "enum": [
                        "off",
                        "messages",
                        "verbose"
                    ],
                    "default": "off",
                    "description": "Enables tracing of communication between VS Code and the VDMJ language server. The trace may contain file paths, source code, and other potentially sensitive information from your project",
                    "scope": "window"
                },
                "vdm-vscode.vdmtools.path.vdmpp": {
                    "title": "Path to VDMTools for VDM++",
                    "type": "string",
                    "default": "",
                    "scope": "resource",
                    "description": "Path to VDMTools for VDM++."
                },
                "vdm-vscode.vdmtools.path.vdmsl": {
                    "title": "Path to VDMTools for VDM-SL",
                    "type": "string",
                    "default": "",
                    "scope": "resource",
                    "description": "Path to VDMTools for VDM-SL."
                }
            }
        },
        "debuggers": [
            {
                "type": "vdm",
                "label": "VDM (SL, PP or RT)",
                "configurationAttributes": {
                    "launch": {
                        "required": [],
                        "properties": {
                            "noDebug": {
                                "type": "boolean",
                                "description": "Don't run debug mode.",
                                "default": false
                            },
                            "defaultName": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "description": "Name of the default module or class.",
                                "default": ""
                            },
                            "trace": {
                                "type": "boolean",
                                "description": "Enable logging of the Debug Adapter Protocol.",
                                "default": true
                            },
                            "command": {
                                "type": "string",
                                "description": "Run single execution of command and terminate.",
                                "default": ""
                            },
                            "remoteControl": {
                                "type": "string",
                                "description": "Delegate the control of the interpreter, thus the remote controller is in charge of the execution or debug session.",
                                "default": ""
                            },
                            "settings": {
                                "description": "Checks settings.",
                                "type": "object",
                                "default": {
                                    "dynamicTypeChecks": true,
                                    "invariantsChecks": true,
                                    "preConditionChecks": true,
                                    "postConditionChecks": true,
                                    "measureChecks": true
                                  },
                                "properties": {
                                    "dynamicTypeChecks": {
                                        "type": "boolean",
                                        "description": "Type check values during interpretation of a VDM model.",
                                        "default": true
                                    },
                                    "invariantsChecks": {
                                        "type": "boolean",
                                        "description": "Check both state and type invariants.",
                                        "default": true
                                    },
                                    "preConditionChecks": {
                                        "type": "boolean",
                                        "description": "Check pre-conditions for all functions and operations during interpretation of a VDM model.",
                                        "default": true
                                    },
                                    "postConditionChecks": {
                                        "type": "boolean",
                                        "description": "Check post-conditions for all functions and operations during interpretation of a VDM model.",
                                        "default": true
                                    },
                                    "measureChecks": {
                                        "type": "boolean",
                                        "description": "Check recursive functions, for which a function has been defined.",
                                        "default": true
                                    }
                                }
                            },
                            "properties": {
                                "description": "Override default/project wide VDMJ properties",
                                "type": "object",
                                "default": {
                                    "vdmj.parser.comment_nesting": 3,
                                    "vdmj.parser.external_readers": null,
                                    "vdmj.annotations.packages": "com.fujitsu.vdmj.ast.annotations;annotations.ast",
                                    "vdmj.annotations.debug": false,
                                    "vdmj.mapping.search_path": null,
                                    "vdmj.tc.skip_recursive_check": false,
                                    "vdmj.tc.skip_cyclic_check": false,
                                    "vdmj.traces.max_errors": 100,
                                    "vdmj.traces.max_repeats": 5,
                                    "vdmj.traces.save_state": false,
                                    "vdmj.traces.max_arg_length": 50,
                                    "vdmj.scheduler.fcfs_timeslice": 10,
                                    "vdmj.scheduler.virtual_timeslice": 10000,
                                    "vdmj.scheduler.jitter": 0,
                                    "vdmj.rt.duration_default": 2,
                                    "vdmj.rt.duration_transactions": false,
                                    "vdmj.rt.log_instvarchanges": false,
                                    "vdmj.rt.max_periodic_overlaps": 20,
                                    "vdmj.rt.diags_guards": false,
                                    "vdmj.rt.diags_timestep": false,
                                    "vdmj.in.powerset_limit": 30
                                  },
                                "properties": {
                                    "vdmj.parser.comment_nesting": {
                                        "type": "number",
                                        "description": "Nesting of block comments: 0=support, 1=warning, 2=error, 3=ignore (default 3)",
                                        "default": 3
                                    },
                                    "vdmj.parser.external_readers": {
                                        "type": ["string", "null"],
                                        "description": "External readers [.suffix]=[class] pairs (default null)",
                                        "default": null
                                    },
                                    "vdmj.annotations.packages": {
                                        "type": "string",
                                        "description": "The package list for annotation classes to load (default 'com.fujitsu.vdmj.ast.annotations;annotations.ast')",
                                        "default": "com.fujitsu.vdmj.ast.annotations;annotations.ast"
                                    },
                                    "vdmj.annotations.debug": {
                                        "type": "boolean",
                                        "description": "Enable annotation debugging (default false)",
                                        "default": false
                                    },
                                    "vdmj.mapping.search_path": {
                                        "type": ["string", "null"],
                                        "description": "An alternative search path for the ClassMapper (default null)",
                                        "default": null
                                    },
                                    "vdmj.tc.skip_recursive_check": {
                                        "type": "boolean",
                                        "description": "Skip the check for mutually-recursive function calls (default false)",
                                        "default": false
                                    },
                                    "vdmj.tc.skip_cyclic_check": {
                                        "type": "boolean",
                                        "description": "Skip the check for definition dependency cycles (default false)",
                                        "default": false
                                    },
                                    "vdmj.traces.max_errors": {
                                        "type": "number",
                                        "description": "The maximum TC errors reported before 'Too many errors' (default 100)",
                                        "default": 100
                                    },
                                    "vdmj.traces.max_repeats": {
                                        "type": "number",
                                        "description": "The maximum number of expansions for '+'' and '*' trace patterns (default 5)",
                                        "default": 5
                                    },
                                    "vdmj.traces.save_state": {
                                        "type": "boolean",
                                        "description": "Serialize the system state between trace tests (default false)",
                                        "default": false
                                    },
                                    "vdmj.traces.max_arg_length": {
                                        "type": "number",
                                        "description": "The size below which trace function args are expanded (default 50)",
                                        "default": 50
                                    },
                                    "vdmj.scheduler.fcfs_timeslice": {
                                        "type": "number",
                                        "description": "The default timeslice (statements executed) for the FCFS policy (default 10)",
                                        "default": 10
                                    },
                                    "vdmj.scheduler.virtual_timeslice": {
                                        "type": "number",
                                        "description": "The vCPU/vBUS timeslice (default 10000)",
                                        "default": 10000
                                    },
                                    "vdmj.scheduler.jitter": {
                                        "type": "number",
                                        "description": "The timeslice variation (+/- jitter ticks, default 0)",
                                        "default": 0
                                    },
                                    "vdmj.rt.duration_default": {
                                        "type": "number",
                                        "description": "The default duration for RT statements (default 2)",
                                        "default": 2
                                    },
                                    "vdmj.rt.duration_transactions": {
                                        "type": "boolean",
                                        "description": "Enable transactional variable updates (default false)",
                                        "default": false
                                    },
                                    "vdmj.rt.log_instvarchanges": {
                                        "type": "boolean",
                                        "description": "Enable InstVarChange RT log entries (default false)",
                                        "default": false
                                    },
                                    "vdmj.rt.max_periodic_overlaps": {
                                        "type": "number",
                                        "description": "Maximum period thread overlaps allowed per object (default 20 - zero mean off)",
                                        "default": 20
                                    },
                                    "vdmj.rt.diags_guards": {
                                        "type": "boolean",
                                        "description": "Enable extra diagnostics for guards etc. (default false)",
                                        "default": false
                                    },
                                    "vdmj.rt.diags_timestep": {
                                        "type": "boolean",
                                        "description": "Enable extra RT log diagnostics for timesteps (default false)",
                                        "default": false
                                    },
                                    "vdmj.in.powerset_limit": {
                                        "type": "number",
                                        "description": "The set size limit for power set expressions (default 30)",
                                        "default": 30
                                    }
                                }
                            }
                        }
                    }
                },
                "initialConfigurations": [
                    {
                        "name": "VDM: Console",
                        "type": "vdm",
                        "request": "launch",
                        "noDebug": false,
                        "defaultName": null
                    }
                ],
                "configurationSnippets": [
                    {
                        "label": "VDM: Console",
                        "description": "Initialise interpreter for a VDM project.",
                        "body": {
                            "name": "Debug Console",
                            "type": "vdm",
                            "request": "launch",
                            "noDebug": false,
                            "defaultName": null
                        }
                    },
                    {
                        "label": "VDM: Entry Point (VDM-SL)",
                        "description": "Launch a VDM project from the specified entry point.",
                        "body": {
                            "name": "Entry Point: ${1:Function/Operation}",
                            "type": "vdm",
                            "request": "launch",
                            "noDebug": false,
                            "defaultName": "DEFAULT",
                            "command": "print ${1:Function/Operation}(${2:arguments})"
                        }
                    },
                    {
                        "label": "VDM: Entry Point (VDM++/-RT)",
                        "description": "Launch a VDM project from the specified entry point.",
                        "body": {
                            "name": "Entry Point: ${1:Class}`${3:Function/Operation}",
                            "type": "vdm",
                            "request": "launch",
                            "noDebug": false,
                            "defaultName": "${1:Class}",
                            "command": "print new ${1:Class}(${2:Class Arguments}).${3:Function/Operation}(${4:Arguments})"
                        }
                    },
                    {
                        "label": "VDM: Remote Control (VDM-SL/++/-RT)",
                        "description": "Launch VDM project using remote control.",
                        "body": {
                            "name": "Remote Control",
                            "type": "vdm",
                            "request": "launch",
                            "noDebug": false,
                            "defaultName": null,
                            "remoteControl": "${1:Full package/class name (e.g.: 'com.fujitsu.ctrl.GUI')}"
                        }
                    },
                    {
                        "label": "VDM: Test Runner",
                        "description": "Run VDM tests using the VDMUnit frameworks TestRunner class.",
                        "body": {
                            "name": "Test Runner",
                            "type": "vdm",
                            "request": "launch",
                            "noDebug": true,
                            "command": "p new TestRunner().run()"
                        }
                    }
                ]
            }
        ],
        "breakpoints": [
            {
                "language": "vdmsl"
            },
            {
                "language": "vdmpp"
            },
            {
                "language": "vdmrt"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run check:version && npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc --watch -p ./",
        "lint": "eslint --ext ts src",
        "pretest": "tsc -p ./",
        "test": "node ./out/test/runTest.js",
        "check:version": "node cmd/check-version.js",
        "enableWebpack": "node cmd/enableWebpack.js",
        "disableWebpack": "node cmd/enableWebpack.js false"
    },
    "withoutWebpack": {
        "scripts": {
            "vscode:prepublish": "npm run check:version && npm run compile",
            "compile": "tsc -p ./",
            "watch": "tsc --watch -p ./",
            "lint": "eslint --ext ts src",
            "pretest": "tsc -p ./",
            "test": "node ./out/test/runTest.js",
            "check:version": "node cmd/check-version.js",
            "enableWebpack": "node cmd/enableWebpack.js",
            "disableWebpack": "node cmd/enableWebpack.js false"
        },
        "main": "./out/src/extension",
        "browser": "./out/src/webExtension.js"
    },
    "withWebpack": {
        "scripts": {
            "vscode:prepublish": "npm run check:version && npm run package",
            "package": "webpack --mode production --devtool hidden-source-map",
            "compile": "webpack --mode none",
            "watch": "webpack --mode none --watch",
            "lint": "eslint --ext ts src",
            "pretest": "tsc -p ./",
            "test": "node ./out/test/runTest.js",
            "check:version": "node cmd/check-version.js",
            "enableWebpack": "node cmd/enableWebpack.js",
            "disableWebpack": "node cmd/enableWebpack.js false"
        },
        "main": "./dist/extension",
        "browser": "./dist/webExtension.js"
    },
    "devDependencies": {
        "@types/chai": "^4.3.0",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/mocha": "^9.1.0",
        "@types/node": "^17.0.15",
        "@types/sinon": "^10.0.11",
        "@types/vscode": "^1.64.0",
        "chai": "^4.3.6",
        "eslint": "^8.9.0",
        "mocha": "^9.2.0",
        "sinon": "^13.0.1",
        "ts-loader": "^9.2.6",
        "typescript": "^4.5.5",
        "vscode-test": "^1.6.1",
        "webpack": "^5.69.1",
        "webpack-cli": "^4.9.2"
    },
    "dependencies": {
        "compile": "0.0.2",
        "fs-extra": "^10.0.0",
        "iconv-lite": "^0.6.3",
        "jschardet": "^3.0.0",
        "run": "^1.4.0",
        "vscode-languageclient": "^7.0.0",
        "yauzl": "^2.10.0"
    }
}
